{"version":3,"file":"js/734.926c0d0e.js","mappings":"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","sources":["webpack://test_dome/./src/views/swiper.vue","webpack://test_dome/src/views/swiper.vue","webpack://test_dome/./src/views/swiper.vue?e05a","webpack://test_dome/./src/views/swiper.vue?1d9d"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"outest\"},[_c('ul',{ref:\"ul\",staticClass:\"content\",staticStyle:{\"left\":\"0px\"}},_vm._l((_vm.images),function(e){return _c('li',{key:e.id,ref:\"li\",refInFor:true,staticStyle:{\"transform\":\"scale(1)\",\"opacity\":\"0.68\",\"zindex\":\"0\"}},[_c('img',{staticClass:\"picture\",attrs:{\"src\":e.src,\"alt\":e.alt}})])}),0),_c('div',[_c('ul',{staticClass:\"sub-circle\"},_vm._l((_vm.images),function(e){return _c('li',{key:e.id,ref:\"circle\",refInFor:true})}),0)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"outest\">\r\n    <!-- <div class=\"before-ul\" @click=\"user_move(-1)\">&lt;</div> -->\r\n    <!-- 旋转木马轮播图 -->\r\n    <ul class=\"content\" style=\"left: 0px\" ref=\"ul\">\r\n      <li\r\n        ref=\"li\"\r\n        v-for=\"e of images\"\r\n        :key=\"e.id\"\r\n        style=\"transform: scale(1); opacity: 0.68; zindex: 0\"\r\n      >\r\n        <img class=\"picture\" :src=\"e.src\" :alt=\"e.alt\" />\r\n       \r\n      </li>\r\n    </ul>\r\n    <!-- <div class=\"after-ul\" @click=\"user_move(1)\">&gt;</div> -->\r\n    <!-- 底部的圆点 -->\r\n    <div>\r\n      <ul class=\"sub-circle\">\r\n        <li ref=\"circle\" v-for=\"e of images\" :key=\"e.id\"></li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      images: [\r\n        {\r\n          src:require('../images/img1.png'),\r\n          alt: \"滕王阁\",\r\n          id: \"aaa\",\r\n        },\r\n        {\r\n          src: require('../images/img2.png'),\r\n          alt: \"岳阳楼\",\r\n          id: \"bbb\",\r\n        },\r\n        {\r\n          src: require('../images/img3.png'),\r\n          alt: \"黄鹤楼\",\r\n          id: \"ccc\",\r\n        },\r\n        {\r\n          src:require('../images/img4.png'),\r\n          alt: \"鹤雀楼\",\r\n          id: \"ddd\",\r\n        },\r\n        {\r\n          src: require('../images/img5.png'),\r\n          alt: \"蓬莱阁\",\r\n          id: \"eee\",\r\n        },\r\n      ],\r\n      tipIndex: 1, // 0-4 用于更新底部圆点  共 5个真实 li\r\n      isChanging: false, // 是否正在变换\r\n      userChanging: false, // 是否是用户触发的变换\r\n    };\r\n  },\r\nmounted(){\r\n\r\n            //监视浏览器窗口的改变，当浏览器窗口最小化时，将默认定时器停掉，当浏览器可视时，再开启\r\n        document.addEventListener('visibilitychange',()=>{          \r\n            if(document.visibilityState === 'hidden'){\r\n                clearInterval(window.timer);\r\n            }else if(document.visibilityState === 'visible'){\r\n                window.timer = this.defaultTimer();\r\n            }\r\n        })\r\n \r\n        for(let i=0; i<3; i++){         //深克隆最前面四个li放在ul的后面\r\n            let templi=this.getEle('li')[i].cloneNode(true);\r\n            this.getEle('ul')[0].appendChild(templi);\r\n        }\r\n \r\n        let element = this.getEle('li');\r\n        //初始化构造，将索引为 1 的li放大，变清晰\r\n        element[this.tipIndex].style.transform='scale(1.5)';\r\n        element[this.tipIndex].style.opacity='1';\r\n        element[this.tipIndex].style.zIndex='10';\r\n        this.$refs.circle[this.tipIndex].style.background='hsl(0,0%,0%)';\r\n        // 全局默认定时器\r\n        window.timer = this.defaultTimer();\r\n},\r\n\r\n  methods:{\r\n            moving(direction){              //控制ul移动的方法 1为 ul左移，-1为 ul右移\r\n            if(direction != 1 && direction != -1){\r\n                return;\r\n            }\r\n            this.isChanging = true;                     // “ 封闭式执行任务，新的任务不能打扰 ，不接新任务”\r\n            if(direction === 1){\r\n                if(this.tipIndex === 6){                //一个循环之后恢复初始化，即只有下标为 1 的li处于放大状态\r\n                    this.tipIndex = 1;\r\n                    this.adjust(this.tipIndex, 6, 0);\r\n                }\r\n                new Promise((res,rej)=>res(this.moveLeft())).then(val => this.tipIndex++);\r\n            }else{\r\n                if(this.tipIndex === 1){                // 先把ul整体瞬移到 以下标为6的li位于中间的位置 再进行右移\r\n                    this.adjust(6, this.tipIndex, -1600);\r\n                }\r\n                new Promise((res,rej)=>res(this.moveRight())).then(val => {\r\n                    if( -- this.tipIndex < 0){\r\n                        this.tipIndex = 4;\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        moveLeft(){                     // ul 向左移动\r\n            let index = this.tipIndex;\r\n            //切换底部圆点\r\n            this.$refs.circle[index%5].style.background=\"hsl(0,0%,90%)\";\r\n            this.$refs.circle[(index+1)%5].style.background='hsl(0,0%,0%)';\r\n            let element = this.getEle('li');\r\n            element[index+1].style.zIndex='10';\r\n            element[index].style.zIndex='0';\r\n            //切换图片 t为变换次数 共32次，每隔10毫秒变换一次，依照宽度来改变，每次左移32px，320ms后移动一个li的距离\r\n            let t = 0;\r\n            let moveLeft = setInterval(()=>{\r\n                //整体移动ul\r\n                this.getEle('ul')[0].style.left = Number.parseInt(this.getEle('ul')[0].style.left) - 10 + 'px';\r\n                //下一个li放大，变清晰\r\n                element[index+1].style.transform=`scale(${1 + 0.5 / 32 * t})`;\r\n                element[index+1].style.opacity=1;\r\n                //当前li缩小，变模糊\r\n                element[index].style.transform=`scale(${1.5 - 0.5 / 32 * t})`;\r\n                element[index].style.opacity=1;\r\n                t++;\r\n                if(t >= 32){        //运动一个li默认的宽度之后停止定时任务\r\n                    if(this.userChanging){\r\n                        this.userChanging = false;\r\n                        window.timer = this.defaultTimer();\r\n                    }\r\n                    this.isChanging = false;\r\n                    clearInterval(moveLeft);\r\n                }\r\n            },10);\r\n        },\r\n        moveRight(){                    // ul 向右移动\r\n            let index = this.tipIndex;  //用this.tipIndex来更新圆点，用index来更新ul、li\r\n            if(index === 1){\r\n                index = 6;\r\n            }else if(index === 0){\r\n                index = 5;\r\n            }\r\n \r\n            this.$refs.circle[this.tipIndex % 5].style.background=\"hsl(0,0%,90%)\";\r\n            this.$refs.circle[(this.tipIndex - 1 < 0) ? 4 : (this.tipIndex - 1)].style.background='hsl(0,0%,60%)';\r\n            let element = this.getEle('li');\r\n            element[index-1].style.zIndex='10';\r\n            element[index].style.zIndex='0';\r\n            //切换图片 t为变换次数 共32次，每隔10毫秒变换一次，依照宽度来改变，每次右移32px，320ms后移动一个li的距离\r\n            let t = 0;\r\n            let moveright = setInterval(()=>{\r\n                //整体移动ul\r\n                this.getEle('ul')[0].style.left = Number.parseInt(this.getEle('ul')[0].style.left) + 10 + 'px';\r\n                //上一个li放大，变清晰\r\n                element[index-1].style.transform=`scale(${1 + 0.5 / 32 * t})`;\r\n                element[index-1].style.opacity=`${0.36 + t * 0.02}`;\r\n                //当前li缩小，变模糊\r\n                element[index].style.transform=`scale(${1.5 - 0.5 / 32 * t})`;\r\n                element[index].style.opacity=`${1 - t * 0.02}`;\r\n                t++;\r\n                if(t >= 32){        //运动一个li默认的宽度之后停止定时任务\r\n                    this.isChanging = false;\r\n                    if(this.userChanging){\r\n                        this.userChanging = false;\r\n                        window.timer = this.defaultTimer();\r\n                    }\r\n                    clearInterval(moveright);\r\n                }\r\n            },10);\r\n        },\r\n        adjust(largeIndex, smallIndex, left){\r\n            let element = this.getEle('li');\r\n            element[largeIndex].style.transform='scale(1.5)';\r\n            element[largeIndex].style.opacity='1';\r\n            element[largeIndex].style.zIndex='10';\r\n            element[smallIndex].style.transform=`scale(1)`;          \r\n            element[smallIndex].style.opacity=`0.36`;\r\n            element[smallIndex].style.zIndex='0';\r\n            this.getEle('ul')[0].style.left = left + 'px';\r\n        },\r\n        getEle(name){                   //封装一个操作dom的函数\r\n            return document.getElementsByTagName(name);\r\n        },\r\n        // 调用这个函数用来给 window 添加一个 默认的定时器，\r\n        // 只有在用户主动点击切换的时候这个定时器被清除，但执行完用户的切换后又将立马加上\r\n        defaultTimer(){                 \r\n            return setInterval(()=>{\r\n                this.moving(1);      // 参数1 是默认向左整体移动ul  即将当前li缩小，下一个li放大\r\n            },3500);\r\n        },\r\n        user_move(val){\r\n            // 如果当前 window.timer 定时器正在进行切换动作 或者 用户此前点击的切换事件正在执行，则不在执行用户此次的动作\r\n            if(this.isChanging || this.userChanging){       \r\n                return;\r\n            }\r\n            clearInterval(window.timer);            // 先清除默认的定时器\r\n            this.userChanging = true;               // 设置用户主动进行的切换动作正在执行\r\n            this.moving(val);                       // 预执行\r\n        }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n.outest{\r\n    --custom-width:960px;\r\n    --custom-height:400px;\r\n    --custom-img-number:5;\r\n    width: var(--custom-width);\r\n    height: var(--custom-height);\r\n    border-radius: 0.5rem;\r\n    border: 1px solid hsl(0, 0%, 75%);\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n.content{\r\n    width:calc(var(--custom-width) * --custom-img-number);\r\n    height: var(--custom-height);\r\n    padding: 0;\r\n    margin: 0;\r\n    position: absolute;\r\n    display: flex;\r\n}\r\n.content > li{\r\n    width: calc(var(--custom-width) / 3);\r\n    list-style: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background:hsl(0,0%,90%);\r\n}\r\n.picture{\r\n    width: 100%;\r\n    height: calc(var(--custom-height) / 2);\r\n    margin-bottom: 0.5em;\r\n}\r\n.text{\r\n    font-size: 1.3rem;\r\n    font-weight: 800;\r\n    text-align: center;\r\n}\r\n \r\n/** 向左向右按键 */\r\n.before-ul,.after-ul{\r\n    font-size: 1.5rem;\r\n    font-weight: 900;\r\n    padding: 0.3rem;\r\n    background: hsl(0 ,0% ,80%) ;\r\n    opacity:1;\r\n    z-index: 20;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translate(0,-50%) scaleY(2);\r\n}\r\n.before-ul{\r\n    left:0px;\r\n    border-top-right-radius: 0.3rem;\r\n    border-bottom-right-radius: 0.3rem;\r\n}\r\n.after-ul{\r\n    right: 0px;\r\n    border-top-left-radius: 0.3rem;\r\n    border-bottom-left-radius: 0.3rem;\r\n}\r\n.before-ul:active{\r\n    color: hsl(0,90%,40%);\r\n    box-shadow: 0.5px 0.5px;\r\n}\r\n.after-ul:active{\r\n    color: hsl(0,90%,40%);\r\n    box-shadow: 0.5px 0.5px;\r\n}\r\n.before-ul:hover{\r\n    cursor: pointer;\r\n    opacity: 1;\r\n    font-weight: bolder;\r\n}\r\n.after-ul:hover{\r\n    cursor: pointer;\r\n    opacity: 1;\r\n    font-weight: bolder;\r\n}\r\n \r\n/**底部小圆圈 */\r\n.sub-circle{\r\n    position: absolute;\r\n    left: 3%;\r\n    bottom: 20px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    padding: 0px;\r\n    margin: 0px;\r\n    z-index: 100;\r\n}\r\n.sub-circle > li{\r\n    list-style: none;\r\n    padding: 0.5rem;\r\n    margin: 0.1rem;\r\n    border-radius: 180px;\r\n    background: hsl(0, 0%, 90%);\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./swiper.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./swiper.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./swiper.vue?vue&type=template&id=f656a858&scoped=true&\"\nimport script from \"./swiper.vue?vue&type=script&lang=js&\"\nexport * from \"./swiper.vue?vue&type=script&lang=js&\"\nimport style0 from \"./swiper.vue?vue&type=style&index=0&id=f656a858&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f656a858\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","ref","staticStyle","_l","images","e","key","id","refInFor","attrs","src","alt","staticRenderFns","data","tipIndex","isChanging","userChanging","mounted","document","clearInterval","window","element","methods","moving","moveLeft","t","moveRight","index","adjust","getEle","defaultTimer","user_move","component"],"sourceRoot":""}